diff --git a/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java b/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java
index 63a7f29..aaab0d6 100644
--- a/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java
+++ b/src/com/google/javascript/jscomp/DeadAssignmentsElimination.java
@@ -299,0 +300,8 @@ class DeadAssignmentsElimination extends AbstractPostOrderCallback implements
+          if (n.getNext() != null) {
+            state = isVariableReadBeforeKill(
+                n.getNext(), variable);
+            if (state == VariableLiveness.KILL) {
+              state = VariableLiveness.MAYBE_LIVE;
+            }
+          }
+          break;
@@ -304,0 +313,5 @@ class DeadAssignmentsElimination extends AbstractPostOrderCallback implements
+          if (n.getNext() != null && n.getNext().getNext() != null) {
+            state = checkHookBranchReadBeforeKill(
+                n.getNext(), n.getNext().getNext(), variable);
+          }
+          break;
@@ -309 +321,0 @@ class DeadAssignmentsElimination extends AbstractPostOrderCallback implements
-            if (!ControlFlowGraph.isEnteringNewCfgNode(sibling)) {
@@ -310,0 +323,5 @@ class DeadAssignmentsElimination extends AbstractPostOrderCallback implements
+            if (state != VariableLiveness.MAYBE_LIVE) {
+              break;
+            }
+          }
+      }
@@ -317,3 +333,0 @@ class DeadAssignmentsElimination extends AbstractPostOrderCallback implements
-            }
-          }
-      }
@@ -339,0 +354,3 @@ class DeadAssignmentsElimination extends AbstractPostOrderCallback implements
+    if (ControlFlowGraph.isEnteringNewCfgNode(n)) { // Not a FUNCTION
+      return VariableLiveness.MAYBE_LIVE;
+    }
@@ -361,0 +379,4 @@ class DeadAssignmentsElimination extends AbstractPostOrderCallback implements
+        VariableLiveness v1 = isVariableReadBeforeKill(
+          n.getFirstChild(), variable);
+        VariableLiveness v2 = isVariableReadBeforeKill(
+          n.getLastChild(), variable);
@@ -363,0 +385,7 @@ class DeadAssignmentsElimination extends AbstractPostOrderCallback implements
+        if (v1 != VariableLiveness.MAYBE_LIVE) {
+          return v1;
+        } else if (v2 == VariableLiveness.READ) {
+          return VariableLiveness.READ;
+        } else {
+          return VariableLiveness.MAYBE_LIVE;
+        }
@@ -364,0 +393,5 @@ class DeadAssignmentsElimination extends AbstractPostOrderCallback implements
+        VariableLiveness first = isVariableReadBeforeKill(
+            n.getFirstChild(), variable);
+        if (first != VariableLiveness.MAYBE_LIVE) {
+          return first;
+        }
@@ -372 +404,0 @@ class DeadAssignmentsElimination extends AbstractPostOrderCallback implements
-          if (!ControlFlowGraph.isEnteringNewCfgNode(child)) { // Not a FUNCTION
@@ -378 +409,0 @@ class DeadAssignmentsElimination extends AbstractPostOrderCallback implements
-      }
